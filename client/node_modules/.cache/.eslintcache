[{"/Users/alik/Desktop/cs4400_phase4/client/src/index.tsx":"1","/Users/alik/Desktop/cs4400_phase4/client/src/screens/create_bank.tsx":"2","/Users/alik/Desktop/cs4400_phase4/client/src/screens/home.tsx":"3","/Users/alik/Desktop/cs4400_phase4/client/src/screens/create_corp.tsx":"4","/Users/alik/Desktop/cs4400_phase4/client/src/screens/create_employee.tsx":"5"},{"size":936,"mtime":1650856284144,"results":"6","hashOfConfig":"7"},{"size":6582,"mtime":1650857550197,"results":"8","hashOfConfig":"7"},{"size":688,"mtime":1650856568248,"results":"9","hashOfConfig":"7"},{"size":3585,"mtime":1650857565282,"results":"10","hashOfConfig":"7"},{"size":4143,"mtime":1650858813113,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"acrxsr",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/alik/Desktop/cs4400_phase4/client/src/index.tsx",[],[],"/Users/alik/Desktop/cs4400_phase4/client/src/screens/create_bank.tsx",[],[],"/Users/alik/Desktop/cs4400_phase4/client/src/screens/home.tsx",[],[],"/Users/alik/Desktop/cs4400_phase4/client/src/screens/create_corp.tsx",[],[],"/Users/alik/Desktop/cs4400_phase4/client/src/screens/create_employee.tsx",["28"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from 'axios';\nimport \"../styles/main.css\";\nimport \"../styles/forms.css\";\nimport { CreateEmployeeState } from '../types/Props'\n\nclass CreateEmployee extends React.Component<{}, CreateEmployeeState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountName: \"\",\n      salary: 0,\n      numPayments: 0,\n      accumulatedEarnings: 0\n    };\n\n    this.handleAccountNameChange = this.handleAccountNameChange.bind(this);\n    this.handleSalaryChange = this.handleSalaryChange.bind(this);\n    this.handleNumPaymentsChange = this.handleNumPaymentsChange.bind(this);\n    this.handleAccumulatedEarningsChange = this.handleAccumulatedEarningsChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearState = this.clearState.bind(this);\n  }\n\n  handleAccountNameChange(event) {\n    this.setState({ accountName: event.target.value });\n  }\n  handleSalaryChange(event) {\n    if (event.target.validity.valid) {\n      this.setState({ salary: event.target.value });\n    }\n  }\n  handleNumPaymentsChange(event) {\n    if (event.target.validity.valid) {\n      this.setState({ numPayments: event.target.value });\n    }\n  }\n  handleAccumulatedEarningsChange(event) {\n    if (event.target.validity.valid) {\n      this.setState({ accumulatedEarnings: event.target.value });\n    }\n  }\n\n  clearState(event) {\n    console.log('cleared')\n    this.setState({\n      accountName: \"\",\n      salary: 0,\n      numPayments: 0,\n      accumulatedEarnings: 0\n    })\n    event.preventDefault();\n  }\n\n  handleSubmit(event) {\n    // send data to back end route {create_corp}\n    Axios.post(\"http://localhost:3001/create_employee\", {\n      accountName: this.state.accountName,\n      salary: this.state.salary,\n      numPayments: this.state.numPayments,\n      accumulatedEarnings: this.state.accumulatedEarnings\n    }).then(() => {\n      console.log(\"Employee data sent!\");\n      // TODO would it be possible to get a response about whether the request succeeded or not?\n    })\n\n    console.log(\"\\employee created\")\n    console.log(this.state)\n    this.clearState(event)\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"mainHeader\">\n          <h6><Link to=\"../\">Home</Link></h6>\n          <h1>Q3: Create Employee</h1>\n        </div>\n        <div className=\"formContainer\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"formItem\">\n              <label>\n                Account Name:\n              </label>\n              <div onChange={this.handleAccountNameChange}>\n                <input type=\"radio\" value=\"test\" name=\"gender\" /> Test\n              </div>\n              <input type=\"text\" value={this.state.accountName} onChange={this.handleAccountNameChange} />\n            </div>\n            <div className=\"formItem\">\n              <label>\n                Salary:\n              </label>\n              <input type=\"text\" value={this.state.salary} onChange={this.handleSalaryChange} />\n              {/* <input type=\"text\" pattern=\"[0-9]*\" value={this.state.salary} onChange={this.handleSalaryChange} /> */}\n            </div>\n            <div className=\"formItem\">\n              <label>\n                Number of Payments:\n              </label>\n              <input type=\"text\" pattern=\"[0-9]*\" value={this.state.numPayments} onChange={this.handleNumPaymentsChange} />\n            </div>\n            <div className=\"formItem\">\n              <label>\n                Accumulated Earnings:\n              </label>\n              <input type=\"text\" pattern=\"[0-9]*\" value={this.state.accumulatedEarnings} onChange={this.handleAccumulatedEarningsChange} />\n            </div>\n            <div className=\"formButtons\">\n              <button onClick={this.clearState} className=\"formCancel\">\n                Cancel\n              </button>\n              <button onClick={this.handleSubmit} className=\"formSubmit\">\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateEmployee;\n",{"ruleId":"29","severity":1,"message":"30","line":68,"column":18,"nodeType":"31","messageId":"32","endLine":68,"endColumn":19,"suggestions":"33"},"no-useless-escape","Unnecessary escape character: \\e.","Literal","unnecessaryEscape",["34","35"],{"messageId":"36","fix":"37","desc":"38"},{"messageId":"39","fix":"40","desc":"41"},"removeEscape",{"range":"42","text":"43"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"44","text":"45"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2078,2079],"",[2078,2078],"\\"]